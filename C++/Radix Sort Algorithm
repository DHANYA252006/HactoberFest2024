//contains radix sort algorithm with advance coding
#include <iostream>
#include <vector>
using namespace std;

// Function to get the maximum element in an array
int getMax(const vector<int>& arr) {
    int maxElem = arr[0];
    for (int i = 1; i < arr.size(); i++) {
        if (arr[i] > maxElem)
            maxElem = arr[i];
    }
    return maxElem;
}

// Function to perform counting sort based on a specific digit
void countingSort(vector<int>& arr, int exp) {
    vector<int> output(arr.size());
    vector<int> count(10, 0);

    for (int i = 0; i < arr.size(); i++)
        count[(arr[i] / exp) % 10]++;

    for (int i = 1; i < 10; i++)
        count[i] += count[i - 1];

    for (int i = arr.size() - 1; i >= 0; i--) {
        output[count[(arr[i] / exp) % 10] - 1] = arr[i];
        count[(arr[i] / exp) % 10]--;
    }

    for (int i = 0; i < arr.size(); i++)
        arr[i] = output[i];
}

// Main function to implement radix sort
void radixSort(vector<int>& arr) {
    int maxElem = getMax(arr);

    for (int exp = 1; maxElem / exp > 0; exp *= 10)
        countingSort(arr, exp);
}

// Function to print the sorted array
void printArray(const vector<int>& arr) {
    for (int i = 0; i < arr.size(); i++)
        cout << arr[i] << " ";
    cout << endl;
}
